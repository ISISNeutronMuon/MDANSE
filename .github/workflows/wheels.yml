name: Build MDANSE

on:
  release:
    types: [created]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        python-version: ["3.9", "3.10", "3.11", "3.12"]
        # os: [ubuntu-20.04, windows-2019, macOS-11, ubuntu-latest, windows-latest, macOS-latest]
    if: |
      !contains( github.ref, 'legacy' )
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install build
        run: python -m pip install build

      - name: Build wheels
        run: (cd MDANSE && python -m build)
        # to supply options, put them in 'env', like:
        # env:
        #   CIBW_SOME_OPTION: value

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}_python${{ matrix.python-version }}_wheel
          path: ./MDANSE/dist/*.whl
          retention-days: 30

  build_gui_wheels:
    name: Build GUI wheels on ${{ matrix.os }}
    needs: [build_wheels]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        python-version: ["3.9", "3.10", "3.11", "3.12"]
        # os: [ubuntu-20.04, windows-2019, macOS-11, ubuntu-latest, windows-latest, macOS-latest]
    if: |
      !contains( github.ref, 'legacy' )
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      
      - uses: actions/download-artifact@v3
        with:
          name: ${{ matrix.os }}_python${{ matrix.python-version }}_wheel

      - name: Install build
        run: python -m pip install build

      - name: Install MDANSE
        if: runner.os == 'Linux' || runner.os == 'macOS'
        run: python -m pip install *.whl

      - name: Install MDANSE on Windows
        if: runner.os == 'Windows'
        run: foreach ($file in Get-ChildItem *.whl) {python -m pip install $file}

      - name: Build wheels
        run: (cd MDANSE_GUI && python -m build)
        # to supply options, put them in 'env', like:
        # env:
        #   CIBW_SOME_OPTION: value

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}_python${{ matrix.python-version }}_GUI_wheel
          path: ./MDANSE_GUI/dist/*.whl
          retention-days: 30

