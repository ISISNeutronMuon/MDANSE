name: CI/CD

on: [push, workflow_dispatch]

jobs:
  ci_ubuntu:
    runs-on: ${{ matrix.os }}
    if: False
    strategy:
      matrix:
        os: ['ubuntu-18.04', 'ubuntu-20.04']
    steps:
      - uses: actions/checkout@v2
      - name: Install python
        uses: actions/setup-python@v2
        with:
          python-version: '2.7.18'
      - name: Install libraries
        if: ${{ (matrix.os == 'ubuntu-18.04') }}
        run: sudo apt-get install netcdf-bin libnetcdf-dev python-dev
      - name: Install libraries
        if: ${{ (matrix.os == 'ubuntu-20.04') }}
        run: sudo apt-get install netcdf-bin libnetcdf-dev python-dev libgtk2.0-0 libgtk2.0-dev
      - name: Install dependencies
        run: |
          python2 -m pip install numpy==1.16.6 matplotlib==2.2.5 Cython==0.29.24 Pyro sphinx==1.6.7 stdeb docutils==0.17.1
          sudo cp /usr/include/netcdf.h $RUNNER_TOOL_CACHE/Python/2.7.18/x64/include/python2.7
      - name: Install wx and vtk
        run: |
          sudo conda create -p $HOME/tempenv python=2.7
          sudo conda install -p $HOME/tempenv -c daf wxpython
          sudo cp -r $HOME/tempenv/lib/python2.7/site-packages/wx-3.0-gtk2/wx $RUNNER_TOOL_CACHE/Python/2.7.18/x64/lib/python2.7/site-packages
          sudo cp -r $HOME/tempenv/lib/wx $RUNNER_TOOL_CACHE/Python/2.7.18/x64/lib
          sudo cp -r $HOME/tempenv/include/wx-3.0/wx $RUNNER_TOOL_CACHE/Python/2.7.18/x64/include
          sudo cp $HOME/tempenv/lib/libwx* $RUNNER_TOOL_CACHE/Python/2.7.18/x64/lib
          sudo conda install -p $HOME/tempenv -c ccordoba12 vtk
          sudo cp -r $HOME/tempenv/lib/python2.7/site-packages/vtk $RUNNER_TOOL_CACHE/Python/2.7.18/x64/lib/python2.7/site-packages
          sudo cp $HOME/tempenv/lib/libvtk* $RUNNER_TOOL_CACHE/Python/2.7.18/x64/lib
      - name: Install ScientificPython
        run: |
          cd $HOME
          git clone https://code.ill.fr/scientific-software/scientific-python.git
          cd scientific-python/
          sudo $RUNNER_TOOL_CACHE/Python/2.7.18/x64/bin/python setup.py install
      - name: Install MMTK
        run: |
          cd $HOME
          git clone https://code.ill.fr/scientific-software/mmtk.git
          cd mmtk
          sudo rm setup.py
          sudo cp $GITHUB_WORKSPACE/BuildServer/Unix/setup.py $HOME/mmtk
          sudo $RUNNER_TOOL_CACHE/Python/2.7.18/x64/bin/python setup.py install
      - name: Install MDANSE
        run: |
          cd $GITHUB_WORKSPACE
          $RUNNER_TOOL_CACHE/Python/2.7.18/x64/bin/python setup.py install
      - name: Run tests
        run: |
          source $GITHUB_WORKSPACE/BuildServer/Unix/MacOS/definitions.sh
          $GITHUB_WORKSPACE/BuildServer/Unix/tests.sh
      - name: Tar artifacts
        run: |
          cd $RUNNER_TOOL_CACHE/Python/2.7.18
          mv x64 python
          tar -czf python.tar.gz python
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}_artifacts
          path: ${{ runner.tool_cache }}/Python/2.7.18/python.tar.gz
          retention-days: 1

  deploy_ubuntu:
    needs: ci_ubuntu
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ['ubuntu-18.04', 'ubuntu-20.04']
    if: |
      contains( github.ref, 'master' ) ||
      contains( github.ref, 'develop' ) ||
      contains( github.ref, 'release-' ) ||
      contains( github.ref, 'hotfix-' ) ||
      contains( github.ref, 'build-' ) ||
      contains( github.ref, 'tags' ) ||
      contains( github.ref, 'web' ) ||
      contains( github.ref, '19_continuous_integration' )
    steps:
      - uses: actions/checkout@v2
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: ${{ matrix.os }}_artifacts
          path: ~/
      - name: Untar artifacts
        run: |
          tar -xzf ~/python.tar.gz -C $HOME
          sudo apt-get install netcdf-bin libnetcdf-dev
      - run: sudo apt-get install dos2unix
      - name: Deploy
        run: |
          source $GITHUB_WORKSPACE/BuildServer/Unix/Debian/definitions.sh
          source $GITHUB_WORKSPACE/BuildServer/Unix/setup_ci.sh
          source $GITHUB_WORKSPACE/BuildServer/Unix/Debian/deploy.sh
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}_installer
          path: ${{ github.workspace }}/*.deb
          retention-days: 90
      - name: Edit postinst
        if: ${{ (matrix.os == 'ubuntu-20.04') }}
        run: sed -i '$ a ln -s /usr/lib/x86_64-linux-gnu/libnetcdf.so.18 /usr/local/lib/libnetcdf.so.15' $GITHUB_WORKSPACE/BuildServer/Unix/Debian/Resources/DEBIAN/postinst
      - name: Deploy for ubuntu 21
        if: ${{ (matrix.os == 'ubuntu-20.04') }}
        run: |
          source $GITHUB_WORKSPACE/BuildServer/Unix/Debian/definitions.sh
          source $GITHUB_WORKSPACE/BuildServer/Unix/setup_ci.sh
          export DISTRO=ubuntu-21.04
          source $GITHUB_WORKSPACE/BuildServer/Unix/Debian/deploy.sh
      - name: Upload ubuntu21 artifacts
        if: ${{ (matrix.os == 'ubuntu-20.04') }}
        uses: actions/upload-artifact@v2
        with:
          name: ubuntu-21.04_installer
          path: ${{ github.workspace }}/*21*.deb
          retention-days: 90

  # OSX
  ci_osx:
    if: True
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ['macos-10.15', 'macos-11']
    steps:
      - uses: actions/checkout@v2
      - name: Install python
        uses: actions/setup-python@v2
        with:
          python-version: '2.7.18'
      - name: Install NetCDF
        run: |
          brew install netcdf
          sudo cp -r /usr/local/include/netcdf $RUNNER_TOOL_CACHE/Python/2.7.18/x64/include
      - name: Install dependecies with pip
        run: |
          python2 -m pip install numpy==1.16.6 matplotlib==2.2.5 Cython==0.29.24 Pyro sphinx==1.6.7 stdeb docutils==0.17.1 py2app
      - name: Install wx and vtk
        run: |
          sudo conda create -p $HOME/tempenv python=2.7
          sudo conda install -p $HOME/tempenv -c daf wxpython
          sudo cp -r $HOME/tempenv/lib/python2.7/site-packages/wx $RUNNER_TOOL_CACHE/Python/2.7.18/x64/lib/python2.7/site-packages
          sudo conda install -p $HOME/tempenv -c free vtk
          sudo cp -r $HOME/tempenv/lib/python2.7/site-packages/vtk $RUNNER_TOOL_CACHE/Python/2.7.18/x64/lib/python2.7/site-packages
          sudo cp $HOME/tempenv/lib/libvtk* $RUNNER_TOOL_CACHE/Python/2.7.18/x64/lib
          sudo cp $HOME/tempenv/lib/libiconv* $RUNNER_TOOL_CACHE/Python/2.7.18/x64/lib
      - name: Prepare virtual machine
        run: |
          source $GITHUB_WORKSPACE/BuildServer/Unix/MacOS/definitions.sh
          source $GITHUB_WORKSPACE/BuildServer/Unix/setup_ci.sh
      - name: Install ScientificPython
        run: |
          cd $HOME
          git clone https://code.ill.fr/scientific-software/scientific-python.git
          cd scientific-python
          sudo python2 setup.py install
      - name: Install MMTK
        run: |
          cd $HOME
          git clone https://code.ill.fr/scientific-software/mmtk.git
          cd mmtk
          sudo rm setup.py
          sudo cp $GITHUB_WORKSPACE/BuildServer/Unix/setup.py $HOME/mmtk
          sudo python2 setup.py install
      - name: Install MDANSE
        run: |
          cd $GITHUB_WORKSPACE
          python2 setup.py install
      - name: Run tests
        run: $GITHUB_WORKSPACE/BuildServer/Unix/tests.sh
      - name: Tar python
        run: |
          cd $RUNNER_TOOL_CACHE/Python/2.7.18
          mv x64 Resources
          tar -czf python.tar.gz Resources
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}_artifacts
          path: ${{ runner.tool_cache }}/Python/2.7.18/python.tar.gz
          retention-days: 1

  test:
    runs-on: macos-10.15
    if: False
    steps:
      - name: Install python
        uses: actions/setup-python@v2
        with:
          python-version: '2.7.18'
      - run: sudo find / -name libint* -print 2>/dev/null

  deploy_osx:
    needs: ci_osx
    runs-on: macos-10.15
    steps:
      - uses: actions/checkout@v2
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: OSX_artifacts
          path: ~/
      - run: brew install netcdf
      - name: Untar python
        run: |
          mkdir -p ~/Contents
          tar -xzf ~/python.tar.gz -C $HOME/Contents
      - name: Deploy MDANSE
        run: |
          source $GITHUB_WORKSPACE/BuildServer/Unix/MacOS/definitions.sh
          source $GITHUB_WORKSPACE/BuildServer/Unix/setup_ci.sh
          source $GITHUB_WORKSPACE/BuildServer/Unix/MacOS/deploy_old.sh
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: MacOS executable
          path: ${{ github.workspace }}/*.dmg
          retention-days: 90
    if: |
      contains( github.ref, 'master' ) ||
      contains( github.ref, 'develop' ) ||
      contains( github.ref, 'release-' ) ||
      contains( github.ref, 'hotfix-' ) ||
      contains( github.ref, 'build-' ) ||
      contains( github.ref, 'tags' ) ||
      contains( github.ref, 'web' ) ||
      contains( github.ref, '19_continuous_integration' )

  deploy_osx2:
    needs: ci_osx
    runs-on: macos-11
    steps:
      - uses: actions/checkout@v2
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: OSX_artifacts
          path: ~/
      - run: brew install netcdf
      - name: Untar python
        run: |
          mkdir -p ~/Contents
          tar -xzf ~/python.tar.gz -C $HOME/Contents
      - name: Build MDANSE
        run: |
          cd $GITHUB_WORKSPACE
          "$HOME/Contents/Resources/bin/python" setup.py build build_api build_help install
      - name: Replace buggy py2app files with dummies
        run: |
          sudo cp -fv "$GITHUB_WORKSPACE/BuildServer/Unix/MacOS/py2app/qt5.py" "$HOME/Contents/Resources/lib/python2.7/site-packages/py2app/recipes"
          sudo cp -fv "$GITHUB_WORKSPACE/BuildServer/Unix/MacOS/py2app/qt6.py" "$HOME/Contents/Resources/lib/python2.7/site-packages/py2app/recipes"
      - name: Build MDANSE app
        run: |
          source $GITHUB_WORKSPACE/BuildServer/Unix/MacOS/definitions.sh
          source $GITHUB_WORKSPACE/BuildServer/Unix/setup_ci.sh
          cd "${GITHUB_WORKSPACE}/BuildServer/Unix/MacOS"
          sudo "$HOME/Contents/Resources/bin/python" build.py py2app --argv-inject "$GITHUB_WORKSPACE" --argv-inject "$VERSION_NAME" --argv-inject "$CI_TEMP_BUILD_DIR" --argv-inject "$CI_TEMP_DIR"
          sudo mkdir -p $GITHUB_WORKSPACE/temp/dist/MDANSE.app/Contents/Resources/bin
          sudo mkdir -p $GITHUB_WORKSPACE/temp/dist/MDANSE.app/Contents/MacOS
          sudo mkdir -p $GITHUB_WORKSPACE/temp/dist/MDANSE.app/Contents/Frameworks
      - name: Add MDANSE version file
        run: |
          source $GITHUB_WORKSPACE/BuildServer/Unix/MacOS/definitions.sh
          source $GITHUB_WORKSPACE/BuildServer/Unix/setup_ci.sh
          echo "${VERSION_NAME}" | sudo tee "$GITHUB_WORKSPACE/temp/dist/MDANSE.app/Contents/Resources/version"
      - name: Copy dependency dylibs
        run: |
          sudo mv -v "$HOME/Contents/Resources/lib/lib*" "$GITHUB_WORKSPACE/temp/dist/MDANSE.app/Contents/Frameworks"
          sudo mv -v "$HOME/Contents/Resources/lib/python2.7/site-packages/wx/libwx*" "$GITHUB_WORKSPACE/temp/dist/MDANSE.app/Contents/Frameworks"
          sudo cp /usr/local/lib/libint*.dylib ${MDANSE_APP_DIR}/Contents/Frameworks
      - name: Copy python files
        run: |
          sudo mkdir -p $GITHUB_WORKSPACE/temp/dist/MDANSE.app/Contents/Resources/bin
          sudo cp -v /System/Library/Frameworks/Python.framework/Versions/2.7/Resources/Python.app/Contents/MacOS/Python $GITHUB_WORKSPACE/temp/dist/MDANSE.app/Contents/Resources/bin/python
          sudo cp -rv $HOME/Contents/Resources/lib $GITHUB_WORKSPACE/temp/dist/MDANSE.app/Contents/Resources
          sudo cp -v /System/Library/Frameworks/Python.framework/Versions/2.7/Python $GITHUB_WORKSPACE/temp/dist/MDANSE.app/Contents/Resources/lib/libpython2.7.dylib
          sudo chmod 777 $GITHUB_WORKSPACE/temp/dist/MDANSE.app/Contents/Resources/lib/libpython2.7.dylib
      - name: Work with links
        run: |
          sudo install_name_tool -change /System/Library/Frameworks/Python.framework/Versions/2.7/Python @executable_path/../Resources/lib/libpython2.7.dylib $GITHUB_WORKSPACE/temp/dist/MDANSE.app/Contents/Resources/bin/python
          sudo install_name_tool -id @loader_path/libpython2.7.dylib $GITHUB_WORKSPACE/temp/dist/MDANSE.app/Contents/Resources/lib/libpython2.7.dylib
          sudo ln -s ../Resources/bin/python $GITHUB_WORKSPACE/temp/dist/MDANSE.app/Contents/MacOS/python27
      - name: Copy site.py
        run: |
          sudo cp ${GITHUB_WORKSPACE}/BuildServer/Unix/MacOS/site.py $GITHUB_WORKSPACE/temp/dist/MDANSE.app/Contents/Resources/.
          sudo cp ${GITHUB_WORKSPACE}/BuildServer/Unix/MacOS/site.py $GITHUB_WORKSPACE/temp/dist/MDANSE.app/Contents/Resources/lib/python2.7/.
      - name: Change dylib paths
        run: |
          chmod 777 ${GITHUB_WORKSPACE}/BuildServer/Unix/MacOS/change_dylib_path.sh
          "${GITHUB_WORKSPACE}/BuildServer/Unix/MacOS/change_dylib_path.sh"
      - name: Edit __boot__.py
        run: |
          source $GITHUB_WORKSPACE/BuildServer/Unix/MacOS/definitions.sh
          sudo "${SED_I_COMMAND[@]}" "s/^add_system_python_extras()$/#add_system_python_extras()/" $GITHUB_WORKSPACE/temp/dist/MDANSE.app/Contents/Resources/__boot__.py
      - name: Delete unnecessary files
        run: |
          sudo rm -rf $GITHUB_WORKSPACE/temp/dist/MDANSE.app/Contents/Resources/lib/python2.7/site-packages/matplotlib/tests
          sudo rm -rf $GITHUB_WORKSPACE/temp/dist/MDANSE.app/Contents/Resources/lib/python2.7/site-packages/matplotlib/mpl-data/sample_data
          sudo rm -rf $GITHUB_WORKSPACE/temp/dist/MDANSE.app/Contents/Resources/mpl-data/sample_data
          sudo rm -rf $GITHUB_WORKSPACE/temp/dist/MDANSE.app/Contents/Resources/lib/python2.7/site-packages/scipy
          sudo rm -rf $GITHUB_WORKSPACE/temp/dist/MDANSE.app/Contents/Resources/lib/python2.7/site-packages/zmq
          sudo rm -rf $GITHUB_WORKSPACE/temp/dist/MDANSE.app/Contents/Resources/lib/python2.7/site-packages/sphinx*
          sudo rm -rf $GITHUB_WORKSPACE/temp/dist/MDANSE.app/Contents/Resources/lib/python2.7/site-packages/Sphinx
          sudo rm -rf $GITHUB_WORKSPACE/temp/dist/MDANSE.app/Contents/Resources/lib/python2.7/site-packages/py2app*
      - name: Create dmg
        run: |
          source $GITHUB_WORKSPACE/BuildServer/Unix/MacOS/definitions.sh
          source $GITHUB_WORKSPACE/BuildServer/Unix/setup_ci.sh
          sleep 5
          export MDANSE_DMG=MDANSE-${VERSION_NAME}-${DISTRO}-${ARCH}.dmg
          "$GITHUB_WORKSPACE/BuildServer/Unix/MacOS/create-dmg" --background "${GITHUB_WORKSPACE}/BuildServer/Unix/MacOS/Resources/dmg/dmg_background.jpg" --volname "MDANSE" --window-pos 200 120 --window-size 800 400 --icon MDANSE.app 200 190 --hide-extension MDANSE.app --app-drop-link 600 185 "${MDANSE_DMG}" $GITHUB_WORKSPACE/temp/dist
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: MacOS executable2
          path: ${{ github.workspace }}/*.dmg
          retention-days: 90
    if: |
      contains( github.ref, 'master' ) ||
      contains( github.ref, 'develop' ) ||
      contains( github.ref, 'release-' ) ||
      contains( github.ref, 'hotfix-' ) ||
      contains( github.ref, 'build-' ) ||
      contains( github.ref, 'tags' ) ||
      contains( github.ref, 'web' ) ||
      contains( github.ref, '19_continuous_integration' )


  # WINDOWS
  ci_windows:
    runs-on: windows-2019
    if: False
    steps:
      - name: Install python
        uses: actions/setup-python@v2
        with:
          python-version: '2.7.18'
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          copy C:\Windows\System32\python27.dll %RUNNER_TOOL_CACHE%\Python\2.7.18\x64
          python -m pip install numpy==1.16.6 matplotlib==2.2.5 Cython==0.29.24 Pyro sphinx==1.6.7 stdeb docutils==0.17.1
          cd "%GITHUB_WORKSPACE%\BuildServer\Windows\Dependencies\"
          python -m pip install PyQt4‑4.11.4‑cp27‑cp27m‑win_amd64.whl VTK‑6.3.0‑cp27‑cp27m‑win_amd64.whl wxPython_common‑3.0.2.0‑py2‑none‑any.whl wxPython‑3.0.2.0‑cp27‑none‑win_amd64.whl
          mkdir %HOME%\netcdf
        shell: cmd
      - name: Prepare NetCDF
        run: |
          choco install 7zip
          Invoke-WebRequest https://downloads.unidata.ucar.edu/netcdf-c/4.8.1/windows_installers/netCDF4.8.1-NC3-64.exe -UseBasicParsing -Outfile "$env:HOME\netcdf\netCDF.exe"
      - name: Extract NetCDF
        run: |
          cd %HOME%\netcdf
          "C:\Program Files\7-Zip\7z.exe" e netCDF.exe
          mkdir "%RUNNER_TOOL_CACHE%\Python\2.7.18\x64\netcdf"
          copy "%HOME%\netcdf" "%RUNNER_TOOL_CACHE%\Python\2.7.18\x64\netcdf"
          cd /d "%RUNNER_TOOL_CACHE%\Python\2.7.18\x64\netcdf"
          dir
          set PATH=%PATH%;%RUNNER_TOOL_CACHE%\Python\2.7.18\x64\netcdf\netcdf
        shell: cmd
      - name: Install VS2008
        run: |
          cd $env:HOME
          Invoke-WebRequest http://download.microsoft.com/download/8/1/d/81d3f35e-fa03-485b-953b-ff952e402520/VS2008ProEdition90dayTrialENUX1435622.iso -UseBasicParsing -Outfile $env:HOME\vs2008.iso
          Mount-DiskImage -ImagePath $env:HOME\vs2008.iso
          Start-Process E:\Setup\setup.exe -ArgumentList "/q /full /norestart" -Wait
      - name: Install ScientificPython
        run: |
          cd "%RUNNER_TOOL_CACHE%\Python\2.7.18\x64"
          git clone https://code.ill.fr/scientific-software/scientific-python.git
          cd scientific-python
          python setup.py build --netcdf_prefix="%RUNNER_TOOL_CACHE%\Python\2.7.18\x64\netcdf" --netcdf_dll="%RUNNER_TOOL_CACHE%\Python\2.7.18\x64\netcdf"
          python setup.py install --netcdf_prefix="%RUNNER_TOOL_CACHE%\Python\2.7.18\x64\netcdf" --netcdf_dll="%RUNNER_TOOL_CACHE%\Python\2.7.18\x64\netcdf"
          copy "%RUNNER_TOOL_CACHE%\Python\2.7.18\x64\netcdf\netcdf.dll" "%RUNNER_TOOL_CACHE%\Python\2.7.18\x64\Lib\site-packages\Scientific"
          copy "%RUNNER_TOOL_CACHE%\Python\2.7.18\x64\netcdf\netcdf.h" "%RUNNER_TOOL_CACHE%\Python\2.7.18\x64\Include\Scientific"
          copy "%RUNNER_TOOL_CACHE%\Python\2.7.18\x64\netcdf\netcdf.lib" "%RUNNER_TOOL_CACHE%\Python\2.7.18\x64\Lib\site-packages\Scientific"
        shell: cmd
      - name: Install MMTK
        run: |
          cd "%RUNNER_TOOL_CACHE%\Python\2.7.18\x64"
          git clone https://code.ill.fr/scientific-software/mmtk.git
          cd mmtk
          python setup.py build install
          copy "%RUNNER_TOOL_CACHE%\Python\2.7.18\x64\netcdf\vcruntime140.dll" "%RUNNER_TOOL_CACHE%\Python\2.7.18\x64\Lib\site-packages\Scientific"
        shell: cmd
      - name: Install MDANSE
        run: |
          cd %GITHUB_WORKSPACE%
          python setup.py build install
        shell: cmd
      - name: Run tests
        run: |
          cd %GITHUB_WORKSPACE%\Tests
          python UnitTests\AllTests.py
          python DependenciesTests\AllTests.py
          python FunctionalTests\Jobs\BuildJobTests.py
          python FunctionalTests\Jobs\AllTests.py
        shell: cmd
      - name: Zip python file
        run: Compress-Archive -Path "$env:RUNNER_TOOL_CACHE\Python\2.7.18\x64\*" -DestinationPath "$env:GITHUB_WORKSPACE\python.zip"
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: windows_artifacts
          path: ${{ github.workspace }}/python.zip
          retention-days: 1

  deploy_windows:
    needs: ci_windows
    runs-on: windows-2019
    if: |
      contains( github.ref, 'master' ) ||
      contains( github.ref, 'develop' ) ||
      contains( github.ref, 'release-' ) ||
      contains( github.ref, 'hotfix-' ) ||
      contains( github.ref, 'build-' ) ||
      contains( github.ref, 'tags' ) ||
      contains( github.ref, 'web' ) ||
      contains( github.ref, '19_continuous_integration' )
    steps:
      - uses: actions/checkout@v2
      - name: Install VS2008
        run: |
          cd $env:HOME
          Invoke-WebRequest http://download.microsoft.com/download/8/1/d/81d3f35e-fa03-485b-953b-ff952e402520/VS2008ProEdition90dayTrialENUX1435622.iso -UseBasicParsing -Outfile $env:HOME\vs2008.iso
          Mount-DiskImage -ImagePath $env:HOME\vs2008.iso
          Start-Process E:\Setup\setup.exe -ArgumentList "/q /full /norestart" -Wait
      - name: Set up virtual machine
        run: |
          call "%GITHUB_WORKSPACE%\BuildServer\Windows\definitions.bat"
          call "%GITHUB_WORKSPACE%\BuildServer\Windows\setup_ci.bat"
          mkdir %GITHUB_WORKSPACE%\BuildServer\Windows\Build
        shell: cmd
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: windows_artifacts
          path: ${{ github.workspace }}\
      - name: Unzip artifacts
        run: Expand-Archive -Path "$env:GITHUB_WORKSPACE\python.zip" -DestinationPath "$env:GITHUB_WORKSPACE\BuildServer\Windows\Build"
      - name: Deploy
        run: |
          cd %GITHUB_WORKSPACE%\BuildServer\Windows\Build\
          call "%GITHUB_WORKSPACE%\BuildServer\Windows\definitions.bat"
          call "%GITHUB_WORKSPACE%\BuildServer\Windows\setup_ci.bat"
          call "%GITHUB_WORKSPACE%\BuildServer\Windows\deploy.bat"
        shell: cmd
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Windows_executable
          path: ${{ github.workspace }}\*.exe
          retention-days: 90